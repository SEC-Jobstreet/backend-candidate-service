basePath: /api/v1
definitions:
  api.applyRequest:
    properties:
      job_id:
        type: string
    required:
    - job_id
    type: object
  api.applyResponse:
    properties:
      status:
        type: string
    type: object
  api.listApplicationsResponse:
    properties:
      applications:
        items:
          $ref: '#/definitions/models.Applications'
        type: array
      page_id:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
    type: object
  api.updateStatusRequest:
    properties:
      id:
        type: string
      status:
        type: string
    required:
    - id
    - status
    type: object
  models.Applications:
    properties:
      candidateID:
        type: string
      createdAt:
        type: integer
      id:
        type: string
      jobID:
        type: string
      status:
        type: string
      updatedAt:
        type: integer
    type: object
  models.Candidates:
    properties:
      address:
        type: string
      countryPhone:
        type: string
      createdAt:
        type: integer
      currentPosition:
        type: string
      description:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      phone:
        type: string
      resumeLink:
        type: string
      resumeName:
        type: string
      shareProfile:
        type: boolean
      startDate:
        type: integer
      updatedAt:
        type: integer
      username:
        type: string
      visa:
        type: boolean
      workShift:
        type: string
      workWhenever:
        type: boolean
    type: object
host: localhost:4000
info:
  contact: {}
  description: This is a candidate Service Server.
  title: candidatee Service API
  version: "1.0"
paths:
  /application_by_employer/{application_id}:
    get:
      consumes:
      - application/json
      description: get application by id
      parameters:
      - description: Application ID
        in: path
        name: application_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Applications'
      summary: Get Application
      tags:
      - application
  /application_list_by_employer:
    get:
      consumes:
      - application/json
      description: get Applications
      parameters:
      - in: query
        name: candidate_id
        type: string
      - in: query
        name: job_id
        type: string
      - in: query
        minimum: 1
        name: page_id
        required: true
        type: integer
      - in: query
        maximum: 20
        minimum: 10
        name: page_size
        required: true
        type: integer
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.listApplicationsResponse'
            type: array
      summary: List Applications
      tags:
      - application
  /apply_job:
    post:
      consumes:
      - application/json
      description: Candidate applies job
      parameters:
      - description: Apply Job
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.applyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.applyResponse'
      summary: Apply Job
      tags:
      - application
  /candidates/{candidate_id}/profile:
    get:
      consumes:
      - application/json
      description: get profile details for a specific candidate
      parameters:
      - description: Candidate ID
        in: path
        name: candidate_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Candidates'
      summary: Get profile by candidate
      tags:
      - candidates
  /create_profile:
    post:
      consumes:
      - multipart/form-data
      description: create profile for a specific candidate
      parameters:
      - description: Candidate ID
        in: path
        name: candidate_id
        required: true
        type: integer
      - description: Start Date
        in: formData
        name: start_date
        required: true
        type: integer
      - description: Work Whenever
        in: formData
        name: work_whenever
        required: true
        type: boolean
      - description: Work Shift
        in: formData
        name: work_shift
        type: string
      - description: Share Profile
        in: formData
        name: share_profile
        required: true
        type: boolean
      - description: Resume
        in: formData
        name: resume
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Candidates'
      summary: Create profile
      tags:
      - candidates
  /employers/{employer_id}/profile:
    get:
      consumes:
      - application/json
      description: get profile details for a specific employer
      parameters:
      - description: Employer ID
        in: path
        name: employer_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Candidates'
      summary: Get profile by employer
      tags:
      - employers
  /update_status:
    put:
      consumes:
      - application/json
      description: Update status of application
      parameters:
      - description: update status by id
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Applications'
      summary: Update tags
      tags:
      - application
swagger: "2.0"
